// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIApplication;
@class NSObject;

SWIFT_CLASS("_TtC28KDDragAndDropCollectionViews11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;
@class NSCoder;

SWIFT_CLASS("_TtC28KDDragAndDropCollectionViews9ColorCell")
@interface ColorCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified label;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP28KDDragAndDropCollectionViews11KDDroppable_")
@protocol KDDroppable
- (BOOL)canDropAtRect:(CGRect)rect;
- (void)willMoveItem:(id _Nonnull)item inRect:(CGRect)rect;
- (void)didMoveItem:(id _Nonnull)item inRect:(CGRect)rect;
- (void)didMoveOutItem:(id _Nonnull)item;
- (void)dropDataItem:(id _Nonnull)item atRect:(CGRect)atRect;
@end

@class UIView;

SWIFT_PROTOCOL("_TtP28KDDragAndDropCollectionViews11KDDraggable_")
@protocol KDDraggable
- (BOOL)canDragAtPoint:(CGPoint)point;
- (UIView * _Nullable)representationImageAtPoint:(CGPoint)point;
- (id _Nullable)dataItemAtPoint:(CGPoint)point;
- (void)dragDataItem:(id _Nonnull)item;
@optional
- (void)startDraggingAtPoint:(CGPoint)point;
- (void)stopDragging;
@end

@class NSIndexPath;
@protocol UICollectionViewDataSource;
@protocol UICollectionViewDelegate;
@class UICollectionViewLayout;

SWIFT_CLASS("_TtC28KDDragAndDropCollectionViews27KDDragAndDropCollectionView")
@interface KDDragAndDropCollectionView : UICollectionView <KDDraggable, KDDroppable>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, strong) NSIndexPath * _Nullable draggingPathOfCellBeingDragged;
@property (nonatomic, strong) id <UICollectionViewDataSource> _Nullable iDataSource;
@property (nonatomic, strong) id <UICollectionViewDelegate> _Nullable iDelegate;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame collectionViewLayout:(UICollectionViewLayout * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (BOOL)canDragAtPoint:(CGPoint)point;
- (UIView * _Nullable)representationImageAtPoint:(CGPoint)point;
- (id _Nullable)dataItemAtPoint:(CGPoint)point;
- (void)startDraggingAtPoint:(CGPoint)point;
- (void)stopDragging;
- (void)dragDataItem:(id _Nonnull)item;
- (BOOL)canDropAtRect:(CGRect)rect;
- (NSIndexPath * _Nullable)indexPathForCellOverlappingRect:(CGRect)rect;
- (void)willMoveItem:(id _Nonnull)item inRect:(CGRect)rect;
@property (nonatomic, readonly) BOOL isHorizontal;
@property (nonatomic) BOOL animating;
@property (nonatomic) BOOL paging;
- (void)checkForEdgesAndScroll:(CGRect)rect;
- (void)didMoveItem:(id _Nonnull)item inRect:(CGRect)rect;
- (void)didMoveOutItem:(id _Nonnull)item;
- (void)dropDataItem:(id _Nonnull)item atRect:(CGRect)atRect;
@end


SWIFT_PROTOCOL("_TtP28KDDragAndDropCollectionViews37KDDragAndDropCollectionViewDataSource_")
@protocol KDDragAndDropCollectionViewDataSource <UICollectionViewDataSource>
- (NSIndexPath * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView indexPathForDataItem:(id _Nonnull)dataItem;
- (id _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView dataItemForIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView moveDataItemFromIndexPath:(NSIndexPath * _Nonnull)from toIndexPath:(NSIndexPath * _Nonnull)to;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView insertDataItem:(id _Nonnull)dataItem atIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView deleteDataItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIGestureRecognizer;
@class UITouch;
@class UILongPressGestureRecognizer;

SWIFT_CLASS("_TtC28KDDragAndDropCollectionViews20KDDragAndDropManager")
@interface KDDragAndDropManager : NSObject <UIGestureRecognizerDelegate>
- (nonnull instancetype)initWithCanvas:(UIView * _Nonnull)canvas collectionViews:(NSArray<UIView *> * _Nonnull)collectionViews OBJC_DESIGNATED_INITIALIZER;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldReceiveTouch:(UITouch * _Nonnull)touch;
- (void)updateForLongPress:(UILongPressGestureRecognizer * _Nonnull)recogniser;
- (CGRect)convertRectToCanvas:(CGRect)rect fromView:(UIView * _Nonnull)view;
@end



@class NSBundle;

SWIFT_CLASS("_TtC28KDDragAndDropCollectionViews14ViewController")
@interface ViewController : UIViewController <KDDragAndDropCollectionViewDataSource, UICollectionViewDataSource>
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified firstCollectionView;
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified secondCollectionView;
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified thirdCollectionView;
@property (nonatomic, strong) KDDragAndDropManager * _Nullable dragAndDropManager;
- (void)viewDidLoad;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (id _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView dataItemForIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView insertDataItem:(id _Nonnull)dataItem atIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView deleteDataItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView moveDataItemFromIndexPath:(NSIndexPath * _Nonnull)from toIndexPath:(NSIndexPath * _Nonnull)to;
- (NSIndexPath * _Nullable)collectionView:(UICollectionView * _Nonnull)collectionView indexPathForDataItem:(id _Nonnull)dataItem;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
